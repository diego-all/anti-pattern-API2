version: '3.8'

services:

  db:
    image: postgres:15-alpine # Usa una imagen oficial de PostgreSQL
    ports:
      - "5432:5432" # Opcional: Mapea el puerto de la DB al host (útil para herramientas externas)
    environment:
      POSTGRES_USER: user # Nombre de usuario de la base de datos
      POSTGRES_PASSWORD: password # Contraseña del usuario
      POSTGRES_DB: mydatabase # Nombre de la base de datos
    volumes:
      # Monta el archivo init.sql para que PostgreSQL lo ejecute al iniciar
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      # Persiste los datos de la base de datos en un volumen nombrado
      - pgdata:/var/lib/postgresql/data
  app:
    build:
      context: . # El contexto de construcción es el directorio actual
      dockerfile: Dockerfile # Usa el Dockerfile que acabamos de crear
    ports:
      - "8080:8080" # Mapea el puerto 8080 del host al puerto 8080 del contenedor
    environment:
      # Asegúrate de que estos valores coincidan con los de tu .env o sean los que esperas
      PORT: 8080
      DATABASE_URL: postgres://user:password@db:5432/mydatabase?sslmode=disable
    depends_on:
      - db # Asegura que la base de datos se inicie antes que la aplicación
    # Para desarrollo, puedes montar el código fuente para recargas en caliente si usas un observador
    # volumes:
    #   - .:/app # Descomenta para montar el volumen para desarrollo


volumes:
  pgdata: # Define el volumen nombrado para la persistencia de datos de PostgreSQL